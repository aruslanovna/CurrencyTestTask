@model CurrencyExchange.Models.Currency

@{
    ViewData["Title"] = "Currency Exchange";
}

<style>
    body {
        background-color: #f4f7f6;
    }

    .container {
        max-width: 500px;
        background: #ffffff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .form-label {
        font-weight: bold;
        color: #005f3b;
        text-align: left;
    }

    .btn-primary {
        background-color: #005f3b;
        border: none;
    }

        .btn-primary:hover {
            background-color: #004529;
        }

    .input-group-text {
        background-color: #005f3b;
        color: white;
        border: none;
    }
</style>

<div class="container mt-5">
    <h1 class="text-center" style="color: #005f3b;">Currency Exchange</h1>

    <form method="post" action="/Home/ConvertCurrency">
        @Html.AntiForgeryToken()

        <div class="mb-3">
            <label for="amount" class="form-label">Amount to convert</label>
            <div class="input-group">
                <span class="input-group-text">$</span>
                <input type="number" step="0.01" class="form-control" id="amount"
                       name="OriginalValue" asp-for="OriginalValue" required>
                <span class="text-danger">@Html.ValidationMessageFor(model => model.OriginalValue)</span>

            </div>
        </div>

        <div class="mb-3">
            <label for="currencyFrom" class="form-label">From</label>
            <select class="form-select" id="currencyFrom" name="CurrencyFrom" asp-for="CurrencyFrom">
                @foreach (var currency in Model.Currencies)
                {
                    <option value="@currency" selected="@(currency == Model.CurrencyFrom ? "selected" : null)">@currency</option>
                }
            </select>
        </div>

        <div class="mb-3">
            <label for="currencyTo" class="form-label">To</label>
            <select class="form-select" id="currencyTo" name="CurrencyTo" asp-for="CurrencyTo">
                @for (int i = 0; i < Model.Currencies.Count; i++)
                {
                    <option value="@Model.Currencies[i]" selected="@(Model.CurrencyTo != null && Model.Currencies[i] == Model.CurrencyTo ? "selected" : i == 1 ? "selected" : null)">@Model.Currencies[i]</option>
                }
            </select>
        </div>

        <div class="mb-3">
            <label for="conversionDate" class="form-label">Date to check currency rate</label>
            <input type="date" class="form-control" id="conversionDate" name="ConversionDate" asp-for="ConversionDate" />
            <span class="text-danger">@Html.ValidationMessageFor(model => model.ConversionDate)</span>
        </div>

        <button type="submit" class="btn btn-primary w-100">Convert</button>
    </form>

    @if (@Model.ConvertedValue.HasValue)
    {
        <div class="mt-4 text-center">
            <label asp-for="Message" class="form-label">Converted Amount: from @Model.OriginalValue @Model.CurrencyFrom</label>
            <h3 style="color: #005f3b;">@Model.ConvertedValue.Value.ToString("N2") @Model.CurrencyTo</h3>
        </div>
    }
</div>
